
// this file is automatically generated by 'aquabsd.alps/aquabsd.alps.kbd/map/gen.py' from the X11 keysyms spec
// if you need to update this (you probably won't ever), delete 'keysyms.xml' and run 'gen.py'

static inline const char* map_x11_to_aqua(int key) {
	switch (key) {

	// Special KEYSYMs


	// Latin-1 KEYSYMs


	// Unicode KEYSYMs


	// Function KEYSYMs

	case 0x0: return "255"; // Keyboard
	case 0xff08: return "backspace"; // Keyboard
	case 0xff09: return "tab"; // Keyboard
	case 0xff0a: return "linefeed"; // Keyboard
	case 0xff0b: return "clear"; // Keyboard
	case 0xff0d: return "return"; // Keyboard
	case 0xff13: return "pause"; // Keyboard
	case 0xff14: return "scroll.lock"; // Keyboard
	case 0xff15: return "sys.req"; // Keyboard
	case 0xff1b: return "escape"; // Keyboard
	case 0xff20: return "multi_key.character.preface"; // Keyboard
	case 0xff21: return "kanji"; // Keyboard
	case 0xff22: return "muhenkan"; // Keyboard
	case 0xff23: return "henkan.mode"; // Keyboard
	case 0xff24: return "romaji"; // Keyboard
	case 0xff25: return "hiragana"; // Keyboard
	case 0xff26: return "katakana"; // Keyboard
	case 0xff27: return "hiragana_katakana.toggle"; // Keyboard
	case 0xff28: return "zenkaku"; // Keyboard
	case 0xff29: return "hankaku"; // Keyboard
	case 0xff2a: return "zenkaku_hankaku.toggle"; // Keyboard
	case 0xff2b: return "touroku"; // Keyboard
	case 0xff2c: return "massyo"; // Keyboard
	case 0xff2d: return "kana.lock"; // Keyboard
	case 0xff2e: return "kana.shift"; // Keyboard
	case 0xff2f: return "eisu.shift"; // Keyboard
	case 0xff30: return "eisu.toggle"; // Keyboard
	case 0xff31: return "hangul.start_stop.toggle"; // Keyboard
	case 0xff32: return "hangul.start"; // Keyboard
	case 0xff33: return "hangul.end"; // Keyboard
	case 0xff34: return "start.hangul_hanja.conversion"; // Keyboard
	case 0xff35: return "hangul.jamo.mode"; // Keyboard
	case 0xff36: return "hangul.romaja.mode"; // Keyboard
	case 0xff37: return "hangul.code.input"; // Keyboard
	case 0xff38: return "hangul.jeonja.mode"; // Keyboard
	case 0xff39: return "hangul.banja.mode"; // Keyboard
	case 0xff3a: return "hangul.prehanja.conversion"; // Keyboard
	case 0xff3b: return "hangul.posthanja.conversion"; // Keyboard
	case 0xff3c: return "hangul.single.candidate"; // Keyboard
	case 0xff3d: return "hangul.multiple.candidate"; // Keyboard
	case 0xff3e: return "hangul.previous.candidate"; // Keyboard
	case 0xff3f: return "hangul.special.symbols"; // Keyboard
	case 0xff50: return "home"; // Keyboard
	case 0xff51: return "left"; // Keyboard
	case 0xff52: return "up"; // Keyboard
	case 0xff53: return "right"; // Keyboard
	case 0xff54: return "down"; // Keyboard
	case 0xff55: return "prior"; // Keyboard
	case 0xff56: return "next"; // Keyboard
	case 0xff57: return "end"; // Keyboard
	case 0xff58: return "begin"; // Keyboard
	case 0xff60: return "select"; // Keyboard
	case 0xff61: return "print"; // Keyboard
	case 0xff62: return "execute"; // Keyboard
	case 0xff63: return "insert"; // Keyboard
	case 0xff65: return "undo"; // Keyboard
	case 0xff66: return "redo"; // Keyboard
	case 0xff67: return "menu"; // Keyboard
	case 0xff68: return "find"; // Keyboard
	case 0xff69: return "cancel"; // Keyboard
	case 0xff6a: return "help"; // Keyboard
	case 0xff6b: return "break"; // Keyboard
	case 0xff7e: return "mode.switch"; // Keyboard
	case 0xff7f: return "num.lock"; // Keyboard
	case 0xff80: return "keypad.space"; // Keyboard
	case 0xff89: return "keypad.tab"; // Keyboard
	case 0xff8d: return "keypad.enter"; // Keyboard
	case 0xff91: return "keypad.f1"; // Keyboard
	case 0xff92: return "keypad.f2"; // Keyboard
	case 0xff93: return "keypad.f3"; // Keyboard
	case 0xff94: return "keypad.f4"; // Keyboard
	case 0xff95: return "keypad.home"; // Keyboard
	case 0xff96: return "keypad.left"; // Keyboard
	case 0xff97: return "keypad.up"; // Keyboard
	case 0xff98: return "keypad.right"; // Keyboard
	case 0xff99: return "keypad.down"; // Keyboard
	case 0xff9a: return "keypad.prior"; // Keyboard
	case 0xff9b: return "keypad.next"; // Keyboard
	case 0xff9c: return "keypad.end"; // Keyboard
	case 0xff9d: return "keypad.begin"; // Keyboard
	case 0xff9e: return "keypad.insert"; // Keyboard
	case 0xff9f: return "keypad.delete"; // Keyboard
	case 0xffaa: return "keypad.multiplication.sign"; // Keyboard
	case 0xffab: return "keypad.plus.sign"; // Keyboard
	case 0xffac: return "keypad.separator"; // Keyboard
	case 0xffad: return "keypad.minus.sign"; // Keyboard
	case 0xffae: return "keypad.decimal.point"; // Keyboard
	case 0xffaf: return "keypad.division.sign"; // Keyboard
	case 0xffb0: return "keypad.digit.zero"; // Keyboard
	case 0xffb1: return "keypad.digit.one"; // Keyboard
	case 0xffb2: return "keypad.digit.two"; // Keyboard
	case 0xffb3: return "keypad.digit.three"; // Keyboard
	case 0xffb4: return "keypad.digit.four"; // Keyboard
	case 0xffb5: return "keypad.digit.five"; // Keyboard
	case 0xffb6: return "keypad.digit.six"; // Keyboard
	case 0xffb7: return "keypad.digit.seven"; // Keyboard
	case 0xffb8: return "keypad.digit.eight"; // Keyboard
	case 0xffb9: return "keypad.digit.nine"; // Keyboard
	case 0xffbd: return "keypad.equals.sign"; // Keyboard
	case 0xffbe: return "f1"; // Keyboard
	case 0xffbf: return "f2"; // Keyboard
	case 0xffc0: return "f3"; // Keyboard
	case 0xffc1: return "f4"; // Keyboard
	case 0xffc2: return "f5"; // Keyboard
	case 0xffc3: return "f6"; // Keyboard
	case 0xffc4: return "f7"; // Keyboard
	case 0xffc5: return "f8"; // Keyboard
	case 0xffc6: return "f9"; // Keyboard
	case 0xffc7: return "f10"; // Keyboard
	case 0xffc8: return "f11"; // Keyboard
	case 0xffc9: return "f12"; // Keyboard
	case 0xffca: return "f13"; // Keyboard
	case 0xffcb: return "f14"; // Keyboard
	case 0xffcc: return "f15"; // Keyboard
	case 0xffcd: return "f16"; // Keyboard
	case 0xffce: return "f17"; // Keyboard
	case 0xffcf: return "f18"; // Keyboard
	case 0xffd0: return "f19"; // Keyboard
	case 0xffd1: return "f20"; // Keyboard
	case 0xffd2: return "f21"; // Keyboard
	case 0xffd3: return "f22"; // Keyboard
	case 0xffd4: return "f23"; // Keyboard
	case 0xffd5: return "f24"; // Keyboard
	case 0xffd6: return "f25"; // Keyboard
	case 0xffd7: return "f26"; // Keyboard
	case 0xffd8: return "f27"; // Keyboard
	case 0xffd9: return "f28"; // Keyboard
	case 0xffda: return "f29"; // Keyboard
	case 0xffdb: return "f30"; // Keyboard
	case 0xffdc: return "f31"; // Keyboard
	case 0xffdd: return "f32"; // Keyboard
	case 0xffde: return "f33"; // Keyboard
	case 0xffdf: return "f34"; // Keyboard
	case 0xffe0: return "f35"; // Keyboard
	case 0xffe1: return "left.shift"; // Keyboard
	case 0xffe2: return "right.shift"; // Keyboard
	case 0xffe3: return "left.control"; // Keyboard
	case 0xffe4: return "right.control"; // Keyboard
	case 0xffe5: return "caps.lock"; // Keyboard
	case 0xffe6: return "shift.lock"; // Keyboard
	case 0xffe7: return "left.meta"; // Keyboard
	case 0xffe8: return "right.meta"; // Keyboard
	case 0xffe9: return "left.alt"; // Keyboard
	case 0xffea: return "right.alt"; // Keyboard
	case 0xffeb: return "left.super"; // Keyboard
	case 0xffec: return "right.super"; // Keyboard
	case 0xffed: return "left.hyper"; // Keyboard
	case 0xffee: return "right.hyper"; // Keyboard
	case 0xffff: return "delete"; // Keyboard
	case 0xfd01: return "3270.duplicate"; // 3270
	case 0xfd02: return "3270.fieldmark"; // 3270
	case 0xfd03: return "3270.right2"; // 3270
	case 0xfd04: return "3270.left2"; // 3270
	case 0xfd05: return "3270.backtab"; // 3270
	case 0xfd06: return "3270.eraseeof"; // 3270
	case 0xfd07: return "3270.eraseinput"; // 3270
	case 0xfd08: return "3270.reset"; // 3270
	case 0xfd09: return "3270.quit"; // 3270
	case 0xfd0a: return "3270.pa1"; // 3270
	case 0xfd0b: return "3270.pa2"; // 3270
	case 0xfd0c: return "3270.pa3"; // 3270
	case 0xfd0d: return "3270.test"; // 3270
	case 0xfd0e: return "3270.attn"; // 3270
	case 0xfd0f: return "3270.cursorblink"; // 3270
	case 0xfd10: return "3270.altcursor"; // 3270
	case 0xfd11: return "3270.keyclick"; // 3270
	case 0xfd12: return "3270.jump"; // 3270
	case 0xfd13: return "3270.ident"; // 3270
	case 0xfd14: return "3270.rule"; // 3270
	case 0xfd15: return "3270.copy"; // 3270
	case 0xfd16: return "3270.play"; // 3270
	case 0xfd17: return "3270.setup"; // 3270
	case 0xfd18: return "3270.record"; // 3270
	case 0xfd19: return "3270.changescreen"; // 3270
	case 0xfd1a: return "3270.deleteword"; // 3270
	case 0xfd1b: return "3270.exselect"; // 3270
	case 0xfd1c: return "3270.cursorselect"; // 3270
	case 0xfd1d: return "3270.printscreen"; // 3270
	case 0xfd1e: return "3270.enter"; // 3270

	// Vendor KEYSYMs


	// Legacy KEYSYMs

	case 0x1a1: return "latin.capital.letter.a.with.ogonek"; // Latin-2 (U+0104)
	case 0x1a2: return "breve"; // Latin-2 (U+02D8)
	case 0x1a3: return "latin.capital.letter.l.with.stroke"; // Latin-2 (U+0141)
	case 0x1a5: return "latin.capital.letter.l.with.caron"; // Latin-2 (U+013D)
	case 0x1a6: return "latin.capital.letter.s.with.acute"; // Latin-2 (U+015A)
	case 0x1a9: return "latin.capital.letter.s.with.caron"; // Latin-2 (U+0160)
	case 0x1aa: return "latin.capital.letter.s.with.cedilla"; // Latin-2 (U+015E)
	case 0x1ab: return "latin.capital.letter.t.with.caron"; // Latin-2 (U+0164)
	case 0x1ac: return "latin.capital.letter.z.with.acute"; // Latin-2 (U+0179)
	case 0x1ae: return "latin.capital.letter.z.with.caron"; // Latin-2 (U+017D)
	case 0x1af: return "latin.capital.letter.z.with.dot.above"; // Latin-2 (U+017B)
	case 0x1b1: return "latin.small.letter.a.with.ogonek"; // Latin-2 (U+0105)
	case 0x1b2: return "ogonek"; // Latin-2 (U+02DB)
	case 0x1b3: return "latin.small.letter.l.with.stroke"; // Latin-2 (U+0142)
	case 0x1b5: return "latin.small.letter.l.with.caron"; // Latin-2 (U+013E)
	case 0x1b6: return "latin.small.letter.s.with.acute"; // Latin-2 (U+015B)
	case 0x1b7: return "caron"; // Latin-2 (U+02C7)
	case 0x1b9: return "latin.small.letter.s.with.caron"; // Latin-2 (U+0161)
	case 0x1ba: return "latin.small.letter.s.with.cedilla"; // Latin-2 (U+015F)
	case 0x1bb: return "latin.small.letter.t.with.caron"; // Latin-2 (U+0165)
	case 0x1bc: return "latin.small.letter.z.with.acute"; // Latin-2 (U+017A)
	case 0x1bd: return "double.acute.accent"; // Latin-2 (U+02DD)
	case 0x1be: return "latin.small.letter.z.with.caron"; // Latin-2 (U+017E)
	case 0x1bf: return "latin.small.letter.z.with.dot.above"; // Latin-2 (U+017C)
	case 0x1c0: return "latin.capital.letter.r.with.acute"; // Latin-2 (U+0154)
	case 0x1c3: return "latin.capital.letter.a.with.breve"; // Latin-2 (U+0102)
	case 0x1c5: return "latin.capital.letter.l.with.acute"; // Latin-2 (U+0139)
	case 0x1c6: return "latin.capital.letter.c.with.acute"; // Latin-2 (U+0106)
	case 0x1c8: return "latin.capital.letter.c.with.caron"; // Latin-2 (U+010C)
	case 0x1ca: return "latin.capital.letter.e.with.ogonek"; // Latin-2 (U+0118)
	case 0x1cc: return "latin.capital.letter.e.with.caron"; // Latin-2 (U+011A)
	case 0x1cf: return "latin.capital.letter.d.with.caron"; // Latin-2 (U+010E)
	case 0x1d0: return "latin.capital.letter.d.with.stroke"; // Latin-2 (U+0110)
	case 0x1d1: return "latin.capital.letter.n.with.acute"; // Latin-2 (U+0143)
	case 0x1d2: return "latin.capital.letter.n.with.caron"; // Latin-2 (U+0147)
	case 0x1d5: return "latin.capital.letter.o.with.double.acute"; // Latin-2 (U+0150)
	case 0x1d8: return "latin.capital.letter.r.with.caron"; // Latin-2 (U+0158)
	case 0x1d9: return "latin.capital.letter.u.with.ring.above"; // Latin-2 (U+016E)
	case 0x1db: return "latin.capital.letter.u.with.double.acute"; // Latin-2 (U+0170)
	case 0x1de: return "latin.capital.letter.t.with.cedilla"; // Latin-2 (U+0162)
	case 0x1e0: return "latin.small.letter.r.with.acute"; // Latin-2 (U+0155)
	case 0x1e3: return "latin.small.letter.a.with.breve"; // Latin-2 (U+0103)
	case 0x1e5: return "latin.small.letter.l.with.acute"; // Latin-2 (U+013A)
	case 0x1e6: return "latin.small.letter.c.with.acute"; // Latin-2 (U+0107)
	case 0x1e8: return "latin.small.letter.c.with.caron"; // Latin-2 (U+010D)
	case 0x1ea: return "latin.small.letter.e.with.ogonek"; // Latin-2 (U+0119)
	case 0x1ec: return "latin.small.letter.e.with.caron"; // Latin-2 (U+011B)
	case 0x1ef: return "latin.small.letter.d.with.caron"; // Latin-2 (U+010F)
	case 0x1f0: return "latin.small.letter.d.with.stroke"; // Latin-2 (U+0111)
	case 0x1f1: return "latin.small.letter.n.with.acute"; // Latin-2 (U+0144)
	case 0x1f2: return "latin.small.letter.n.with.caron"; // Latin-2 (U+0148)
	case 0x1f5: return "latin.small.letter.o.with.double.acute"; // Latin-2 (U+0151)
	case 0x1f8: return "latin.small.letter.r.with.caron"; // Latin-2 (U+0159)
	case 0x1f9: return "latin.small.letter.u.with.ring.above"; // Latin-2 (U+016F)
	case 0x1fb: return "latin.small.letter.u.with.double.acute"; // Latin-2 (U+0171)
	case 0x1fe: return "latin.small.letter.t.with.cedilla"; // Latin-2 (U+0163)
	case 0x1ff: return "dot.above"; // Latin-2 (U+02D9)
	case 0x2a1: return "latin.capital.letter.h.with.stroke"; // Latin-3 (U+0126)
	case 0x2a6: return "latin.capital.letter.h.with.circumflex"; // Latin-3 (U+0124)
	case 0x2a9: return "latin.capital.letter.i.with.dot.above"; // Latin-3 (U+0130)
	case 0x2ab: return "latin.capital.letter.g.with.breve"; // Latin-3 (U+011E)
	case 0x2ac: return "latin.capital.letter.j.with.circumflex"; // Latin-3 (U+0134)
	case 0x2b1: return "latin.small.letter.h.with.stroke"; // Latin-3 (U+0127)
	case 0x2b6: return "latin.small.letter.h.with.circumflex"; // Latin-3 (U+0125)
	case 0x2b9: return "latin.small.letter.dotless.i"; // Latin-3 (U+0131)
	case 0x2bb: return "latin.small.letter.g.with.breve"; // Latin-3 (U+011F)
	case 0x2bc: return "latin.small.letter.j.with.circumflex"; // Latin-3 (U+0135)
	case 0x2c5: return "latin.capital.letter.c.with.dot.above"; // Latin-3 (U+010A)
	case 0x2c6: return "latin.capital.letter.c.with.circumflex"; // Latin-3 (U+0108)
	case 0x2d5: return "latin.capital.letter.g.with.dot.above"; // Latin-3 (U+0120)
	case 0x2d8: return "latin.capital.letter.g.with.circumflex"; // Latin-3 (U+011C)
	case 0x2dd: return "latin.capital.letter.u.with.breve"; // Latin-3 (U+016C)
	case 0x2de: return "latin.capital.letter.s.with.circumflex"; // Latin-3 (U+015C)
	case 0x2e5: return "latin.small.letter.c.with.dot.above"; // Latin-3 (U+010B)
	case 0x2e6: return "latin.small.letter.c.with.circumflex"; // Latin-3 (U+0109)
	case 0x2f5: return "latin.small.letter.g.with.dot.above"; // Latin-3 (U+0121)
	case 0x2f8: return "latin.small.letter.g.with.circumflex"; // Latin-3 (U+011D)
	case 0x2fd: return "latin.small.letter.u.with.breve"; // Latin-3 (U+016D)
	case 0x2fe: return "latin.small.letter.s.with.circumflex"; // Latin-3 (U+015D)
	case 0x3a2: return "latin.small.letter.kra"; // Latin-4 (U+0138)
	case 0x3a3: return "latin.capital.letter.r.with.cedilla"; // Latin-4 (U+0156)
	case 0x3a5: return "latin.capital.letter.i.with.tilde"; // Latin-4 (U+0128)
	case 0x3a6: return "latin.capital.letter.l.with.cedilla"; // Latin-4 (U+013B)
	case 0x3aa: return "latin.capital.letter.e.with.macron"; // Latin-4 (U+0112)
	case 0x3ab: return "latin.capital.letter.g.with.cedilla"; // Latin-4 (U+0122)
	case 0x3ac: return "latin.capital.letter.t.with.stroke"; // Latin-4 (U+0166)
	case 0x3b3: return "latin.small.letter.r.with.cedilla"; // Latin-4 (U+0157)
	case 0x3b5: return "latin.small.letter.i.with.tilde"; // Latin-4 (U+0129)
	case 0x3b6: return "latin.small.letter.l.with.cedilla"; // Latin-4 (U+013C)
	case 0x3ba: return "latin.small.letter.e.with.macron"; // Latin-4 (U+0113)
	case 0x3bb: return "latin.small.letter.g.with.cedilla"; // Latin-4 (U+0123)
	case 0x3bc: return "latin.small.letter.t.with.stroke"; // Latin-4 (U+0167)
	case 0x3bd: return "latin.capital.letter.eng"; // Latin-4 (U+014A)
	case 0x3bf: return "latin.small.letter.eng"; // Latin-4 (U+014B)
	case 0x3c0: return "latin.capital.letter.a.with.macron"; // Latin-4 (U+0100)
	case 0x3c7: return "latin.capital.letter.i.with.ogonek"; // Latin-4 (U+012E)
	case 0x3cc: return "latin.capital.letter.e.with.dot.above"; // Latin-4 (U+0116)
	case 0x3cf: return "latin.capital.letter.i.with.macron"; // Latin-4 (U+012A)
	case 0x3d1: return "latin.capital.letter.n.with.cedilla"; // Latin-4 (U+0145)
	case 0x3d2: return "latin.capital.letter.o.with.macron"; // Latin-4 (U+014C)
	case 0x3d3: return "latin.capital.letter.k.with.cedilla"; // Latin-4 (U+0136)
	case 0x3d9: return "latin.capital.letter.u.with.ogonek"; // Latin-4 (U+0172)
	case 0x3dd: return "latin.capital.letter.u.with.tilde"; // Latin-4 (U+0168)
	case 0x3de: return "latin.capital.letter.u.with.macron"; // Latin-4 (U+016A)
	case 0x3e0: return "latin.small.letter.a.with.macron"; // Latin-4 (U+0101)
	case 0x3e7: return "latin.small.letter.i.with.ogonek"; // Latin-4 (U+012F)
	case 0x3ec: return "latin.small.letter.e.with.dot.above"; // Latin-4 (U+0117)
	case 0x3ef: return "latin.small.letter.i.with.macron"; // Latin-4 (U+012B)
	case 0x3f1: return "latin.small.letter.n.with.cedilla"; // Latin-4 (U+0146)
	case 0x3f2: return "latin.small.letter.o.with.macron"; // Latin-4 (U+014D)
	case 0x3f3: return "latin.small.letter.k.with.cedilla"; // Latin-4 (U+0137)
	case 0x3f9: return "latin.small.letter.u.with.ogonek"; // Latin-4 (U+0173)
	case 0x3fd: return "latin.small.letter.u.with.tilde"; // Latin-4 (U+0169)
	case 0x3fe: return "latin.small.letter.u.with.macron"; // Latin-4 (U+016B)
	case 0x47e: return "overline"; // Kana (U+203E)
	case 0x4a1: return "kana.full.stop"; // Kana (U+3002)
	case 0x4a2: return "kana.opening.bracket"; // Kana (U+300C)
	case 0x4a3: return "kana.closing.bracket"; // Kana (U+300D)
	case 0x4a4: return "kana.comma"; // Kana (U+3001)
	case 0x4a5: return "kana.conjunctive"; // Kana (U+30FB)
	case 0x4a6: return "kana.letter.wo"; // Kana (U+30F2)
	case 0x4a7: return "kana.letter.small.a"; // Kana (U+30A1)
	case 0x4a8: return "kana.letter.small.i"; // Kana (U+30A3)
	case 0x4a9: return "kana.letter.small.u"; // Kana (U+30A5)
	case 0x4aa: return "kana.letter.small.e"; // Kana (U+30A7)
	case 0x4ab: return "kana.letter.small.o"; // Kana (U+30A9)
	case 0x4ac: return "kana.letter.small.ya"; // Kana (U+30E3)
	case 0x4ad: return "kana.letter.small.yu"; // Kana (U+30E5)
	case 0x4ae: return "kana.letter.small.yo"; // Kana (U+30E7)
	case 0x4af: return "kana.letter.small.tsu"; // Kana (U+30C3)
	case 0x4b0: return "prolonged.sound.symbol"; // Kana (U+30FC)
	case 0x4b1: return "kana.letter.a"; // Kana (U+30A2)
	case 0x4b2: return "kana.letter.i"; // Kana (U+30A4)
	case 0x4b3: return "kana.letter.u"; // Kana (U+30A6)
	case 0x4b4: return "kana.letter.e"; // Kana (U+30A8)
	case 0x4b5: return "kana.letter.o"; // Kana (U+30AA)
	case 0x4b6: return "kana.letter.ka"; // Kana (U+30AB)
	case 0x4b7: return "kana.letter.ki"; // Kana (U+30AD)
	case 0x4b8: return "kana.letter.ku"; // Kana (U+30AF)
	case 0x4b9: return "kana.letter.ke"; // Kana (U+30B1)
	case 0x4ba: return "kana.letter.ko"; // Kana (U+30B3)
	case 0x4bb: return "kana.letter.sa"; // Kana (U+30B5)
	case 0x4bc: return "kana.letter.shi"; // Kana (U+30B7)
	case 0x4bd: return "kana.letter.su"; // Kana (U+30B9)
	case 0x4be: return "kana.letter.se"; // Kana (U+30BB)
	case 0x4bf: return "kana.letter.so"; // Kana (U+30BD)
	case 0x4c0: return "kana.letter.ta"; // Kana (U+30BF)
	case 0x4c1: return "kana.letter.chi"; // Kana (U+30C1)
	case 0x4c2: return "kana.letter.tsu"; // Kana (U+30C4)
	case 0x4c3: return "kana.letter.te"; // Kana (U+30C6)
	case 0x4c4: return "kana.letter.to"; // Kana (U+30C8)
	case 0x4c5: return "kana.letter.na"; // Kana (U+30CA)
	case 0x4c6: return "kana.letter.ni"; // Kana (U+30CB)
	case 0x4c7: return "kana.letter.nu"; // Kana (U+30CC)
	case 0x4c8: return "kana.letter.ne"; // Kana (U+30CD)
	case 0x4c9: return "kana.letter.no"; // Kana (U+30CE)
	case 0x4ca: return "kana.letter.ha"; // Kana (U+30CF)
	case 0x4cb: return "kana.letter.hi"; // Kana (U+30D2)
	case 0x4cc: return "kana.letter.fu"; // Kana (U+30D5)
	case 0x4cd: return "kana.letter.he"; // Kana (U+30D8)
	case 0x4ce: return "kana.letter.ho"; // Kana (U+30DB)
	case 0x4cf: return "kana.letter.ma"; // Kana (U+30DE)
	case 0x4d0: return "kana.letter.mi"; // Kana (U+30DF)
	case 0x4d1: return "kana.letter.mu"; // Kana (U+30E0)
	case 0x4d2: return "kana.letter.me"; // Kana (U+30E1)
	case 0x4d3: return "kana.letter.mo"; // Kana (U+30E2)
	case 0x4d4: return "kana.letter.ya"; // Kana (U+30E4)
	case 0x4d5: return "kana.letter.yu"; // Kana (U+30E6)
	case 0x4d6: return "kana.letter.yo"; // Kana (U+30E8)
	case 0x4d7: return "kana.letter.ra"; // Kana (U+30E9)
	case 0x4d8: return "kana.letter.ri"; // Kana (U+30EA)
	case 0x4d9: return "kana.letter.ru"; // Kana (U+30EB)
	case 0x4da: return "kana.letter.re"; // Kana (U+30EC)
	case 0x4db: return "kana.letter.ro"; // Kana (U+30ED)
	case 0x4dc: return "kana.letter.wa"; // Kana (U+30EF)
	case 0x4dd: return "kana.letter.n"; // Kana (U+30F3)
	case 0x4de: return "voiced.sound.symbol"; // Kana (U+309B)
	case 0x4df: return "semivoiced.sound.symbol"; // Kana (U+309C)
	case 0x5ac: return "arabic.comma"; // Arabic (U+060C)
	case 0x5bb: return "arabic.semicolon"; // Arabic (U+061B)
	case 0x5bf: return "arabic.question.mark"; // Arabic (U+061F)
	case 0x5c1: return "arabic.letter.hamza"; // Arabic (U+0621)
	case 0x5c2: return "arabic.letter.alef.with.madda.above"; // Arabic (U+0622)
	case 0x5c3: return "arabic.letter.alef.with.hamza.above"; // Arabic (U+0623)
	case 0x5c4: return "arabic.letter.waw.with.hamza.above"; // Arabic (U+0624)
	case 0x5c5: return "arabic.letter.alef.with.hamza.below"; // Arabic (U+0625)
	case 0x5c6: return "arabic.letter.yeh.with.hamza.above"; // Arabic (U+0626)
	case 0x5c7: return "arabic.letter.alef"; // Arabic (U+0627)
	case 0x5c8: return "arabic.letter.beh"; // Arabic (U+0628)
	case 0x5c9: return "arabic.letter.teh.marbuta"; // Arabic (U+0629)
	case 0x5ca: return "arabic.letter.teh"; // Arabic (U+062A)
	case 0x5cb: return "arabic.letter.theh"; // Arabic (U+062B)
	case 0x5cc: return "arabic.letter.jeem"; // Arabic (U+062C)
	case 0x5cd: return "arabic.letter.hah"; // Arabic (U+062D)
	case 0x5ce: return "arabic.letter.khah"; // Arabic (U+062E)
	case 0x5cf: return "arabic.letter.dal"; // Arabic (U+062F)
	case 0x5d0: return "arabic.letter.thal"; // Arabic (U+0630)
	case 0x5d1: return "arabic.letter.reh"; // Arabic (U+0631)
	case 0x5d2: return "arabic.letter.zain"; // Arabic (U+0632)
	case 0x5d3: return "arabic.letter.seen"; // Arabic (U+0633)
	case 0x5d4: return "arabic.letter.sheen"; // Arabic (U+0634)
	case 0x5d5: return "arabic.letter.sad"; // Arabic (U+0635)
	case 0x5d6: return "arabic.letter.dad"; // Arabic (U+0636)
	case 0x5d7: return "arabic.letter.tah"; // Arabic (U+0637)
	case 0x5d8: return "arabic.letter.zah"; // Arabic (U+0638)
	case 0x5d9: return "arabic.letter.ain"; // Arabic (U+0639)
	case 0x5da: return "arabic.letter.ghain"; // Arabic (U+063A)
	case 0x5e0: return "arabic.tatweel"; // Arabic (U+0640)
	case 0x5e1: return "arabic.letter.feh"; // Arabic (U+0641)
	case 0x5e2: return "arabic.letter.qaf"; // Arabic (U+0642)
	case 0x5e3: return "arabic.letter.kaf"; // Arabic (U+0643)
	case 0x5e4: return "arabic.letter.lam"; // Arabic (U+0644)
	case 0x5e5: return "arabic.letter.meem"; // Arabic (U+0645)
	case 0x5e6: return "arabic.letter.noon"; // Arabic (U+0646)
	case 0x5e7: return "arabic.letter.heh"; // Arabic (U+0647)
	case 0x5e8: return "arabic.letter.waw"; // Arabic (U+0648)
	case 0x5e9: return "arabic.letter.alef.maksura"; // Arabic (U+0649)
	case 0x5ea: return "arabic.letter.yeh"; // Arabic (U+064A)
	case 0x5eb: return "arabic.fathatan"; // Arabic (U+064B)
	case 0x5ec: return "arabic.dammatan"; // Arabic (U+064C)
	case 0x5ed: return "arabic.kasratan"; // Arabic (U+064D)
	case 0x5ee: return "arabic.fatha"; // Arabic (U+064E)
	case 0x5ef: return "arabic.damma"; // Arabic (U+064F)
	case 0x5f0: return "arabic.kasra"; // Arabic (U+0650)
	case 0x5f1: return "arabic.shadda"; // Arabic (U+0651)
	case 0x5f2: return "arabic.sukun"; // Arabic (U+0652)
	case 0x6a1: return "cyrillic.small.letter.dje"; // Cyrillic (U+0452)
	case 0x6a2: return "cyrillic.small.letter.gje"; // Cyrillic (U+0453)
	case 0x6a3: return "cyrillic.small.letter.io"; // Cyrillic (U+0451)
	case 0x6a4: return "cyrillic.small.letter.ukrainian.ie"; // Cyrillic (U+0454)
	case 0x6a5: return "cyrillic.small.letter.dze"; // Cyrillic (U+0455)
	case 0x6a6: return "cyrillic.small.letter.byelorussian_ukrainian.i"; // Cyrillic (U+0456)
	case 0x6a7: return "cyrillic.small.letter.yi"; // Cyrillic (U+0457)
	case 0x6a8: return "cyrillic.small.letter.je"; // Cyrillic (U+0458)
	case 0x6a9: return "cyrillic.small.letter.lje"; // Cyrillic (U+0459)
	case 0x6aa: return "cyrillic.small.letter.nje"; // Cyrillic (U+045A)
	case 0x6ab: return "cyrillic.small.letter.tshe"; // Cyrillic (U+045B)
	case 0x6ac: return "cyrillic.small.letter.kje"; // Cyrillic (U+045C)
	case 0x6ad: return "cyrillic.small.letter.ghe.with.upturn"; // Cyrillic (U+0491)
	case 0x6ae: return "cyrillic.small.letter.short.u"; // Cyrillic (U+045E)
	case 0x6af: return "cyrillic.small.letter.dzhe"; // Cyrillic (U+045F)
	case 0x6b0: return "numero.sign"; // Cyrillic (U+2116)
	case 0x6b1: return "cyrillic.capital.letter.dje"; // Cyrillic (U+0402)
	case 0x6b2: return "cyrillic.capital.letter.gje"; // Cyrillic (U+0403)
	case 0x6b3: return "cyrillic.capital.letter.io"; // Cyrillic (U+0401)
	case 0x6b4: return "cyrillic.capital.letter.ukrainian.ie"; // Cyrillic (U+0404)
	case 0x6b5: return "cyrillic.capital.letter.dze"; // Cyrillic (U+0405)
	case 0x6b6: return "cyrillic.capital.letter.byelorussian_ukrainian.i"; // Cyrillic (U+0406)
	case 0x6b7: return "cyrillic.capital.letter.yi"; // Cyrillic (U+0407)
	case 0x6b8: return "cyrillic.capital.letter.je"; // Cyrillic (U+0408)
	case 0x6b9: return "cyrillic.capital.letter.lje"; // Cyrillic (U+0409)
	case 0x6ba: return "cyrillic.capital.letter.nje"; // Cyrillic (U+040A)
	case 0x6bb: return "cyrillic.capital.letter.tshe"; // Cyrillic (U+040B)
	case 0x6bc: return "cyrillic.capital.letter.kje"; // Cyrillic (U+040C)
	case 0x6bd: return "cyrillic.capital.letter.ghe.with.upturn"; // Cyrillic (U+0490)
	case 0x6be: return "cyrillic.capital.letter.short.u"; // Cyrillic (U+040E)
	case 0x6bf: return "cyrillic.capital.letter.dzhe"; // Cyrillic (U+040F)
	case 0x6c0: return "cyrillic.small.letter.yu"; // Cyrillic (U+044E)
	case 0x6c1: return "cyrillic.small.letter.a"; // Cyrillic (U+0430)
	case 0x6c2: return "cyrillic.small.letter.be"; // Cyrillic (U+0431)
	case 0x6c3: return "cyrillic.small.letter.tse"; // Cyrillic (U+0446)
	case 0x6c4: return "cyrillic.small.letter.de"; // Cyrillic (U+0434)
	case 0x6c5: return "cyrillic.small.letter.ie"; // Cyrillic (U+0435)
	case 0x6c6: return "cyrillic.small.letter.ef"; // Cyrillic (U+0444)
	case 0x6c7: return "cyrillic.small.letter.ghe"; // Cyrillic (U+0433)
	case 0x6c8: return "cyrillic.small.letter.ha"; // Cyrillic (U+0445)
	case 0x6c9: return "cyrillic.small.letter.i"; // Cyrillic (U+0438)
	case 0x6ca: return "cyrillic.small.letter.short.i"; // Cyrillic (U+0439)
	case 0x6cb: return "cyrillic.small.letter.ka"; // Cyrillic (U+043A)
	case 0x6cc: return "cyrillic.small.letter.el"; // Cyrillic (U+043B)
	case 0x6cd: return "cyrillic.small.letter.em"; // Cyrillic (U+043C)
	case 0x6ce: return "cyrillic.small.letter.en"; // Cyrillic (U+043D)
	case 0x6cf: return "cyrillic.small.letter.o"; // Cyrillic (U+043E)
	case 0x6d0: return "cyrillic.small.letter.pe"; // Cyrillic (U+043F)
	case 0x6d1: return "cyrillic.small.letter.ya"; // Cyrillic (U+044F)
	case 0x6d2: return "cyrillic.small.letter.er"; // Cyrillic (U+0440)
	case 0x6d3: return "cyrillic.small.letter.es"; // Cyrillic (U+0441)
	case 0x6d4: return "cyrillic.small.letter.te"; // Cyrillic (U+0442)
	case 0x6d5: return "cyrillic.small.letter.u"; // Cyrillic (U+0443)
	case 0x6d6: return "cyrillic.small.letter.zhe"; // Cyrillic (U+0436)
	case 0x6d7: return "cyrillic.small.letter.ve"; // Cyrillic (U+0432)
	case 0x6d8: return "cyrillic.small.letter.soft.sign"; // Cyrillic (U+044C)
	case 0x6d9: return "cyrillic.small.letter.yeru"; // Cyrillic (U+044B)
	case 0x6da: return "cyrillic.small.letter.ze"; // Cyrillic (U+0437)
	case 0x6db: return "cyrillic.small.letter.sha"; // Cyrillic (U+0448)
	case 0x6dc: return "cyrillic.small.letter.e"; // Cyrillic (U+044D)
	case 0x6dd: return "cyrillic.small.letter.shcha"; // Cyrillic (U+0449)
	case 0x6de: return "cyrillic.small.letter.che"; // Cyrillic (U+0447)
	case 0x6df: return "cyrillic.small.letter.hard.sign"; // Cyrillic (U+044A)
	case 0x6e0: return "cyrillic.capital.letter.yu"; // Cyrillic (U+042E)
	case 0x6e1: return "cyrillic.capital.letter.a"; // Cyrillic (U+0410)
	case 0x6e2: return "cyrillic.capital.letter.be"; // Cyrillic (U+0411)
	case 0x6e3: return "cyrillic.capital.letter.tse"; // Cyrillic (U+0426)
	case 0x6e4: return "cyrillic.capital.letter.de"; // Cyrillic (U+0414)
	case 0x6e5: return "cyrillic.capital.letter.ie"; // Cyrillic (U+0415)
	case 0x6e6: return "cyrillic.capital.letter.ef"; // Cyrillic (U+0424)
	case 0x6e7: return "cyrillic.capital.letter.ghe"; // Cyrillic (U+0413)
	case 0x6e8: return "cyrillic.capital.letter.ha"; // Cyrillic (U+0425)
	case 0x6e9: return "cyrillic.capital.letter.i"; // Cyrillic (U+0418)
	case 0x6ea: return "cyrillic.capital.letter.short.i"; // Cyrillic (U+0419)
	case 0x6eb: return "cyrillic.capital.letter.ka"; // Cyrillic (U+041A)
	case 0x6ec: return "cyrillic.capital.letter.el"; // Cyrillic (U+041B)
	case 0x6ed: return "cyrillic.capital.letter.em"; // Cyrillic (U+041C)
	case 0x6ee: return "cyrillic.capital.letter.en"; // Cyrillic (U+041D)
	case 0x6ef: return "cyrillic.capital.letter.o"; // Cyrillic (U+041E)
	case 0x6f0: return "cyrillic.capital.letter.pe"; // Cyrillic (U+041F)
	case 0x6f1: return "cyrillic.capital.letter.ya"; // Cyrillic (U+042F)
	case 0x6f2: return "cyrillic.capital.letter.er"; // Cyrillic (U+0420)
	case 0x6f3: return "cyrillic.capital.letter.es"; // Cyrillic (U+0421)
	case 0x6f4: return "cyrillic.capital.letter.te"; // Cyrillic (U+0422)
	case 0x6f5: return "cyrillic.capital.letter.u"; // Cyrillic (U+0423)
	case 0x6f6: return "cyrillic.capital.letter.zhe"; // Cyrillic (U+0416)
	case 0x6f7: return "cyrillic.capital.letter.ve"; // Cyrillic (U+0412)
	case 0x6f8: return "cyrillic.capital.letter.soft.sign"; // Cyrillic (U+042C)
	case 0x6f9: return "cyrillic.capital.letter.yeru"; // Cyrillic (U+042B)
	case 0x6fa: return "cyrillic.capital.letter.ze"; // Cyrillic (U+0417)
	case 0x6fb: return "cyrillic.capital.letter.sha"; // Cyrillic (U+0428)
	case 0x6fc: return "cyrillic.capital.letter.e"; // Cyrillic (U+042D)
	case 0x6fd: return "cyrillic.capital.letter.shcha"; // Cyrillic (U+0429)
	case 0x6fe: return "cyrillic.capital.letter.che"; // Cyrillic (U+0427)
	case 0x6ff: return "cyrillic.capital.letter.hard.sign"; // Cyrillic (U+042A)
	case 0x7a1: return "greek.capital.letter.alpha.with.tonos"; // Greek (U+0386)
	case 0x7a2: return "greek.capital.letter.epsilon.with.tonos"; // Greek (U+0388)
	case 0x7a3: return "greek.capital.letter.eta.with.tonos"; // Greek (U+0389)
	case 0x7a4: return "greek.capital.letter.iota.with.tonos"; // Greek (U+038A)
	case 0x7a5: return "greek.capital.letter.iota.with.dialytika"; // Greek (U+03AA)
	case 0x7a7: return "greek.capital.letter.omicron.with.tonos"; // Greek (U+038C)
	case 0x7a8: return "greek.capital.letter.upsilon.with.tonos"; // Greek (U+038E)
	case 0x7a9: return "greek.capital.letter.upsilon.with.dialytika"; // Greek (U+03AB)
	case 0x7ab: return "greek.capital.letter.omega.with.tonos"; // Greek (U+038F)
	case 0x7ae: return "greek.dialytika.tonos"; // Greek (U+0385)
	case 0x7af: return "horizontal.bar"; // Greek (U+2015)
	case 0x7b1: return "greek.small.letter.alpha.with.tonos"; // Greek (U+03AC)
	case 0x7b2: return "greek.small.letter.epsilon.with.tonos"; // Greek (U+03AD)
	case 0x7b3: return "greek.small.letter.eta.with.tonos"; // Greek (U+03AE)
	case 0x7b4: return "greek.small.letter.iota.with.tonos"; // Greek (U+03AF)
	case 0x7b5: return "greek.small.letter.iota.with.dialytika"; // Greek (U+03CA)
	case 0x7b6: return "greek.small.letter.iota.with.dialytika.and.tonos"; // Greek (U+0390)
	case 0x7b7: return "greek.small.letter.omicron.with.tonos"; // Greek (U+03CC)
	case 0x7b8: return "greek.small.letter.upsilon.with.tonos"; // Greek (U+03CD)
	case 0x7b9: return "greek.small.letter.upsilon.with.dialytika"; // Greek (U+03CB)
	case 0x7ba: return "greek.small.letter.upsilon.with.dialytika.and.tonos"; // Greek (U+03B0)
	case 0x7bb: return "greek.small.letter.omega.with.tonos"; // Greek (U+03CE)
	case 0x7c1: return "greek.capital.letter.alpha"; // Greek (U+0391)
	case 0x7c2: return "greek.capital.letter.beta"; // Greek (U+0392)
	case 0x7c3: return "greek.capital.letter.gamma"; // Greek (U+0393)
	case 0x7c4: return "greek.capital.letter.delta"; // Greek (U+0394)
	case 0x7c5: return "greek.capital.letter.epsilon"; // Greek (U+0395)
	case 0x7c6: return "greek.capital.letter.zeta"; // Greek (U+0396)
	case 0x7c7: return "greek.capital.letter.eta"; // Greek (U+0397)
	case 0x7c8: return "greek.capital.letter.theta"; // Greek (U+0398)
	case 0x7c9: return "greek.capital.letter.iota"; // Greek (U+0399)
	case 0x7ca: return "greek.capital.letter.kappa"; // Greek (U+039A)
	case 0x7cb: return "greek.capital.letter.lamda"; // Greek (U+039B)
	case 0x7cc: return "greek.capital.letter.mu"; // Greek (U+039C)
	case 0x7cd: return "greek.capital.letter.nu"; // Greek (U+039D)
	case 0x7ce: return "greek.capital.letter.xi"; // Greek (U+039E)
	case 0x7cf: return "greek.capital.letter.omicron"; // Greek (U+039F)
	case 0x7d0: return "greek.capital.letter.pi"; // Greek (U+03A0)
	case 0x7d1: return "greek.capital.letter.rho"; // Greek (U+03A1)
	case 0x7d2: return "greek.capital.letter.sigma"; // Greek (U+03A3)
	case 0x7d4: return "greek.capital.letter.tau"; // Greek (U+03A4)
	case 0x7d5: return "greek.capital.letter.upsilon"; // Greek (U+03A5)
	case 0x7d6: return "greek.capital.letter.phi"; // Greek (U+03A6)
	case 0x7d7: return "greek.capital.letter.chi"; // Greek (U+03A7)
	case 0x7d8: return "greek.capital.letter.psi"; // Greek (U+03A8)
	case 0x7d9: return "greek.capital.letter.omega"; // Greek (U+03A9)
	case 0x7e1: return "greek.small.letter.alpha"; // Greek (U+03B1)
	case 0x7e2: return "greek.small.letter.beta"; // Greek (U+03B2)
	case 0x7e3: return "greek.small.letter.gamma"; // Greek (U+03B3)
	case 0x7e4: return "greek.small.letter.delta"; // Greek (U+03B4)
	case 0x7e5: return "greek.small.letter.epsilon"; // Greek (U+03B5)
	case 0x7e6: return "greek.small.letter.zeta"; // Greek (U+03B6)
	case 0x7e7: return "greek.small.letter.eta"; // Greek (U+03B7)
	case 0x7e8: return "greek.small.letter.theta"; // Greek (U+03B8)
	case 0x7e9: return "greek.small.letter.iota"; // Greek (U+03B9)
	case 0x7ea: return "greek.small.letter.kappa"; // Greek (U+03BA)
	case 0x7eb: return "greek.small.letter.lamda"; // Greek (U+03BB)
	case 0x7ec: return "greek.small.letter.mu"; // Greek (U+03BC)
	case 0x7ed: return "greek.small.letter.nu"; // Greek (U+03BD)
	case 0x7ee: return "greek.small.letter.xi"; // Greek (U+03BE)
	case 0x7ef: return "greek.small.letter.omicron"; // Greek (U+03BF)
	case 0x7f0: return "greek.small.letter.pi"; // Greek (U+03C0)
	case 0x7f1: return "greek.small.letter.rho"; // Greek (U+03C1)
	case 0x7f2: return "greek.small.letter.sigma"; // Greek (U+03C3)
	case 0x7f3: return "greek.small.letter.final.sigma"; // Greek (U+03C2)
	case 0x7f4: return "greek.small.letter.tau"; // Greek (U+03C4)
	case 0x7f5: return "greek.small.letter.upsilon"; // Greek (U+03C5)
	case 0x7f6: return "greek.small.letter.phi"; // Greek (U+03C6)
	case 0x7f7: return "greek.small.letter.chi"; // Greek (U+03C7)
	case 0x7f8: return "greek.small.letter.psi"; // Greek (U+03C8)
	case 0x7f9: return "greek.small.letter.omega"; // Greek (U+03C9)
	case 0x8a1: return "left.radical"; // Technical (U+23B7)
	case 0x8a2: return "top.left.radical"; // Technical
	case 0x8a3: return "horizontal.connector"; // Technical
	case 0x8a4: return "top.integral"; // Technical (U+2320)
	case 0x8a5: return "bottom.integral"; // Technical (U+2321)
	case 0x8a6: return "vertical.connector"; // Technical
	case 0x8a7: return "top.left.square.bracket"; // Technical (U+23A1)
	case 0x8a8: return "bottom.left.square.bracket"; // Technical (U+23A3)
	case 0x8a9: return "top.right.square.bracket"; // Technical (U+23A4)
	case 0x8aa: return "bottom.right.square.bracket"; // Technical (U+23A6)
	case 0x8ab: return "top.left.parenthesis"; // Technical (U+239B)
	case 0x8ac: return "bottom.left.parenthesis"; // Technical (U+239D)
	case 0x8ad: return "top.right.parenthesis"; // Technical (U+239E)
	case 0x8ae: return "bottom.right.parenthesis"; // Technical (U+23A0)
	case 0x8af: return "left.middle.curly.brace"; // Technical (U+23A8)
	case 0x8b0: return "right.middle.curly.brace"; // Technical (U+23AC)
	case 0x8b1: return "top.left.summation"; // Technical
	case 0x8b2: return "bottom.left.summation"; // Technical
	case 0x8b3: return "top.vertical.summation.connector"; // Technical
	case 0x8b4: return "bottom.vertical.summation.connector"; // Technical
	case 0x8b5: return "top.right.summation"; // Technical
	case 0x8b6: return "bottom.right.summation"; // Technical
	case 0x8b7: return "right.middle.summation"; // Technical
	case 0x8bc: return "less.than.or.equal.sign"; // Technical (U+2264)
	case 0x8bd: return "not.equal.sign"; // Technical (U+2260)
	case 0x8be: return "greater.than.or.equal.sign"; // Technical (U+2265)
	case 0x8bf: return "integral"; // Technical (U+222B)
	case 0x8c0: return "therefore"; // Technical (U+2234)
	case 0x8c1: return "variation"; // Technical (U+221D)
	case 0x8c2: return "infinity"; // Technical (U+221E)
	case 0x8c5: return "nabla"; // Technical (U+2207)
	case 0x8c8: return "is.approximate.to"; // Technical (U+223C)
	case 0x8c9: return "similar.or.equal.to"; // Technical (U+2243)
	case 0x8cd: return "if.and.only.if"; // Technical (U+21D4)
	case 0x8ce: return "implies"; // Technical (U+21D2)
	case 0x8cf: return "identical.to"; // Technical (U+2261)
	case 0x8d6: return "radical"; // Technical (U+221A)
	case 0x8da: return "is.included.in"; // Technical (U+2282)
	case 0x8db: return "includes"; // Technical (U+2283)
	case 0x8dc: return "intersection"; // Technical (U+2229)
	case 0x8dd: return "union"; // Technical (U+222A)
	case 0x8de: return "logical.and"; // Technical (U+2227)
	case 0x8df: return "logical.or"; // Technical (U+2228)
	case 0x8ef: return "partial.derivative"; // Technical (U+2202)
	case 0x8f6: return "function"; // Technical (U+0192)
	case 0x8fb: return "left.arrow"; // Technical (U+2190)
	case 0x8fc: return "upward.arrow"; // Technical (U+2191)
	case 0x8fd: return "right.arrow"; // Technical (U+2192)
	case 0x8fe: return "downward.arrow"; // Technical (U+2193)
	case 0x9df: return "blank"; // Special
	case 0x9e0: return "solid.diamond"; // Special (U+25C6)
	case 0x9e1: return "checkerboard"; // Special (U+2592)
	case 0x9e2: return "ht"; // Special (U+2409)
	case 0x9e3: return "ff"; // Special (U+240C)
	case 0x9e4: return "cr"; // Special (U+240D)
	case 0x9e5: return "lf"; // Special (U+240A)
	case 0x9e8: return "nl"; // Special (U+2424)
	case 0x9e9: return "vt"; // Special (U+240B)
	case 0x9ea: return "lower_right.corner"; // Special (U+2518)
	case 0x9eb: return "upper_right.corner"; // Special (U+2510)
	case 0x9ec: return "upper_left.corner"; // Special (U+250C)
	case 0x9ed: return "lower_left.corner"; // Special (U+2514)
	case 0x9ee: return "crossing_lines"; // Special (U+253C)
	case 0x9ef: return "horizontal.line"; // Special (U+23BA)
	case 0x9f0: return "horizontal.line"; // Special (U+23BB)
	case 0x9f1: return "horizontal.line"; // Special (U+2500)
	case 0x9f2: return "horizontal.line"; // Special (U+23BC)
	case 0x9f3: return "horizontal.line"; // Special (U+23BD)
	case 0x9f4: return "left.t"; // Special (U+251C)
	case 0x9f5: return "right.t"; // Special (U+2524)
	case 0x9f6: return "bottom.t"; // Special (U+2534)
	case 0x9f7: return "top.t"; // Special (U+252C)
	case 0x9f8: return "vertical.bar"; // Special (U+2502)
	case 0xaa1: return "em.space"; // Publish (U+2003)
	case 0xaa2: return "en.space"; // Publish (U+2002)
	case 0xaa3: return "3_em.space"; // Publish (U+2004)
	case 0xaa4: return "4_em.space"; // Publish (U+2005)
	case 0xaa5: return "digit.space"; // Publish (U+2007)
	case 0xaa6: return "punctuation.space"; // Publish (U+2008)
	case 0xaa7: return "thin.space"; // Publish (U+2009)
	case 0xaa8: return "hair.space"; // Publish (U+200A)
	case 0xaa9: return "em.dash"; // Publish (U+2014)
	case 0xaaa: return "en.dash"; // Publish (U+2013)
	case 0xaac: return "significant.blank.symbol"; // Publish
	case 0xaae: return "ellipsis"; // Publish (U+2026)
	case 0xaaf: return "double.baseline.dot"; // Publish (U+2025)
	case 0xab0: return "vulgar.fraction.one.third"; // Publish (U+2153)
	case 0xab1: return "vulgar.fraction.two.thirds"; // Publish (U+2154)
	case 0xab2: return "vulgar.fraction.one.fifth"; // Publish (U+2155)
	case 0xab3: return "vulgar.fraction.two.fifths"; // Publish (U+2156)
	case 0xab4: return "vulgar.fraction.three.fifths"; // Publish (U+2157)
	case 0xab5: return "vulgar.fraction.four.fifths"; // Publish (U+2158)
	case 0xab6: return "vulgar.fraction.one.sixth"; // Publish (U+2159)
	case 0xab7: return "vulgar.fraction.five.sixths"; // Publish (U+215A)
	case 0xab8: return "care.of"; // Publish (U+2105)
	case 0xabb: return "figure.dash"; // Publish (U+2012)
	case 0xabc: return "left.angle.bracket"; // Publish
	case 0xabd: return "decimal.point"; // Publish
	case 0xabe: return "right.angle.bracket"; // Publish
	case 0xabf: return "marker"; // Publish
	case 0xac3: return "vulgar.fraction.one.eighth"; // Publish (U+215B)
	case 0xac4: return "vulgar.fraction.three.eighths"; // Publish (U+215C)
	case 0xac5: return "vulgar.fraction.five.eighths"; // Publish (U+215D)
	case 0xac6: return "vulgar.fraction.seven.eighths"; // Publish (U+215E)
	case 0xac9: return "trademark.sign"; // Publish (U+2122)
	case 0xaca: return "signature.mark"; // Publish
	case 0xacb: return "trademark.sign.in.circle"; // Publish
	case 0xacc: return "left.open.triangle"; // Publish
	case 0xacd: return "right.open.triangle"; // Publish
	case 0xace: return "em.open.circle"; // Publish
	case 0xacf: return "em.open.rectangle"; // Publish
	case 0xad0: return "left.single.quotation.mark"; // Publish (U+2018)
	case 0xad1: return "right.single.quotation.mark"; // Publish (U+2019)
	case 0xad2: return "left.double.quotation.mark"; // Publish (U+201C)
	case 0xad3: return "right.double.quotation.mark"; // Publish (U+201D)
	case 0xad4: return "prescription"; // Publish (U+211E)
	case 0xad5: return "per.mille.sign"; // Publish (U+2030)
	case 0xad6: return "minutes"; // Publish (U+2032)
	case 0xad7: return "seconds"; // Publish (U+2033)
	case 0xad9: return "latin.cross"; // Publish (U+271D)
	case 0xada: return "hexagram"; // Publish
	case 0xadb: return "filled.rectangle.bullet"; // Publish
	case 0xadc: return "filled.left.triangle.bullet"; // Publish
	case 0xadd: return "filled.right.triangle.bullet"; // Publish
	case 0xade: return "em.filled.circle"; // Publish
	case 0xadf: return "em.filled.rectangle"; // Publish
	case 0xae0: return "en.open.circle.bullet"; // Publish
	case 0xae1: return "en.open.square.bullet"; // Publish
	case 0xae2: return "open.rectangular.bullet"; // Publish
	case 0xae3: return "open.triangular.bullet.up"; // Publish
	case 0xae4: return "open.triangular.bullet.down"; // Publish
	case 0xae5: return "open.star"; // Publish
	case 0xae6: return "en.filled.circle.bullet"; // Publish
	case 0xae7: return "en.filled.square.bullet"; // Publish
	case 0xae8: return "filled.triangular.bullet.up"; // Publish
	case 0xae9: return "filled.triangular.bullet.down"; // Publish
	case 0xaea: return "left.pointer"; // Publish
	case 0xaeb: return "right.pointer"; // Publish
	case 0xaec: return "club"; // Publish (U+2663)
	case 0xaed: return "diamond"; // Publish (U+2666)
	case 0xaee: return "heart"; // Publish (U+2665)
	case 0xaf0: return "maltese.cross"; // Publish (U+2720)
	case 0xaf1: return "dagger"; // Publish (U+2020)
	case 0xaf2: return "double.dagger"; // Publish (U+2021)
	case 0xaf3: return "check.mark"; // Publish (U+2713)
	case 0xaf4: return "ballot.cross"; // Publish (U+2717)
	case 0xaf5: return "musical.sharp"; // Publish (U+266F)
	case 0xaf6: return "musical.flat"; // Publish (U+266D)
	case 0xaf7: return "male.symbol"; // Publish (U+2642)
	case 0xaf8: return "female.symbol"; // Publish (U+2640)
	case 0xaf9: return "telephone.symbol"; // Publish (U+260E)
	case 0xafa: return "telephone.recorder.symbol"; // Publish (U+2315)
	case 0xafb: return "phonograph.copyright.sign"; // Publish (U+2117)
	case 0xafc: return "caret"; // Publish (U+2038)
	case 0xafd: return "single.low.quotation.mark"; // Publish (U+201A)
	case 0xafe: return "double.low.quotation.mark"; // Publish (U+201E)
	case 0xaff: return "cursor"; // Publish
	case 0xba3: return "left.caret"; // APL
	case 0xba6: return "right.caret"; // APL
	case 0xba8: return "down.caret"; // APL
	case 0xba9: return "up.caret"; // APL
	case 0xbc0: return "overbar"; // APL
	case 0xbc2: return "down.tack"; // APL (U+22A5)
	case 0xbc3: return "up.shoe.cap"; // APL
	case 0xbc4: return "down.stile"; // APL (U+230A)
	case 0xbc6: return "underbar"; // APL
	case 0xbca: return "jot"; // APL (U+2218)
	case 0xbcc: return "quad"; // APL (U+2395)
	case 0xbce: return "up.tack"; // APL (U+22A4)
	case 0xbcf: return "circle"; // APL (U+25CB)
	case 0xbd3: return "up.stile"; // APL (U+2308)
	case 0xbd6: return "down.shoe.cup"; // APL
	case 0xbd8: return "right.shoe"; // APL
	case 0xbda: return "left.shoe"; // APL
	case 0xbdc: return "left.tack"; // APL (U+22A2)
	case 0xbfc: return "right.tack"; // APL (U+22A3)
	case 0xcdf: return "double.low.line"; // Hebrew (U+2017)
	case 0xce0: return "hebrew.letter.alef"; // Hebrew (U+05D0)
	case 0xce1: return "hebrew.letter.bet"; // Hebrew (U+05D1)
	case 0xce2: return "hebrew.letter.gimel"; // Hebrew (U+05D2)
	case 0xce3: return "hebrew.letter.dalet"; // Hebrew (U+05D3)
	case 0xce4: return "hebrew.letter.he"; // Hebrew (U+05D4)
	case 0xce5: return "hebrew.letter.vav"; // Hebrew (U+05D5)
	case 0xce6: return "hebrew.letter.zayin"; // Hebrew (U+05D6)
	case 0xce7: return "hebrew.letter.het"; // Hebrew (U+05D7)
	case 0xce8: return "hebrew.letter.tet"; // Hebrew (U+05D8)
	case 0xce9: return "hebrew.letter.yod"; // Hebrew (U+05D9)
	case 0xcea: return "hebrew.letter.final.kaf"; // Hebrew (U+05DA)
	case 0xceb: return "hebrew.letter.kaf"; // Hebrew (U+05DB)
	case 0xcec: return "hebrew.letter.lamed"; // Hebrew (U+05DC)
	case 0xced: return "hebrew.letter.final.mem"; // Hebrew (U+05DD)
	case 0xcee: return "hebrew.letter.mem"; // Hebrew (U+05DE)
	case 0xcef: return "hebrew.letter.final.nun"; // Hebrew (U+05DF)
	case 0xcf0: return "hebrew.letter.nun"; // Hebrew (U+05E0)
	case 0xcf1: return "hebrew.letter.samekh"; // Hebrew (U+05E1)
	case 0xcf2: return "hebrew.letter.ayin"; // Hebrew (U+05E2)
	case 0xcf3: return "hebrew.letter.final.pe"; // Hebrew (U+05E3)
	case 0xcf4: return "hebrew.letter.pe"; // Hebrew (U+05E4)
	case 0xcf5: return "hebrew.letter.final.tsadi"; // Hebrew (U+05E5)
	case 0xcf6: return "hebrew.letter.tsadi"; // Hebrew (U+05E6)
	case 0xcf7: return "hebrew.letter.qof"; // Hebrew (U+05E7)
	case 0xcf8: return "hebrew.letter.resh"; // Hebrew (U+05E8)
	case 0xcf9: return "hebrew.letter.shin"; // Hebrew (U+05E9)
	case 0xcfa: return "hebrew.letter.tav"; // Hebrew (U+05EA)
	case 0xda1: return "thai.character.ko.kai"; // Thai (U+0E01)
	case 0xda2: return "thai.character.kho.khai"; // Thai (U+0E02)
	case 0xda3: return "thai.character.kho.khuat"; // Thai (U+0E03)
	case 0xda4: return "thai.character.kho.khwai"; // Thai (U+0E04)
	case 0xda5: return "thai.character.kho.khon"; // Thai (U+0E05)
	case 0xda6: return "thai.character.kho.rakhang"; // Thai (U+0E06)
	case 0xda7: return "thai.character.ngo.ngu"; // Thai (U+0E07)
	case 0xda8: return "thai.character.cho.chan"; // Thai (U+0E08)
	case 0xda9: return "thai.character.cho.ching"; // Thai (U+0E09)
	case 0xdaa: return "thai.character.cho.chang"; // Thai (U+0E0A)
	case 0xdab: return "thai.character.so.so"; // Thai (U+0E0B)
	case 0xdac: return "thai.character.cho.choe"; // Thai (U+0E0C)
	case 0xdad: return "thai.character.yo.ying"; // Thai (U+0E0D)
	case 0xdae: return "thai.character.do.chada"; // Thai (U+0E0E)
	case 0xdaf: return "thai.character.to.patak"; // Thai (U+0E0F)
	case 0xdb0: return "thai.character.tho.than"; // Thai (U+0E10)
	case 0xdb1: return "thai.character.tho.nangmontho"; // Thai (U+0E11)
	case 0xdb2: return "thai.character.tho.phuthao"; // Thai (U+0E12)
	case 0xdb3: return "thai.character.no.nen"; // Thai (U+0E13)
	case 0xdb4: return "thai.character.do.dek"; // Thai (U+0E14)
	case 0xdb5: return "thai.character.to.tao"; // Thai (U+0E15)
	case 0xdb6: return "thai.character.tho.thung"; // Thai (U+0E16)
	case 0xdb7: return "thai.character.tho.thahan"; // Thai (U+0E17)
	case 0xdb8: return "thai.character.tho.thong"; // Thai (U+0E18)
	case 0xdb9: return "thai.character.no.nu"; // Thai (U+0E19)
	case 0xdba: return "thai.character.bo.baimai"; // Thai (U+0E1A)
	case 0xdbb: return "thai.character.po.pla"; // Thai (U+0E1B)
	case 0xdbc: return "thai.character.pho.phung"; // Thai (U+0E1C)
	case 0xdbd: return "thai.character.fo.fa"; // Thai (U+0E1D)
	case 0xdbe: return "thai.character.pho.phan"; // Thai (U+0E1E)
	case 0xdbf: return "thai.character.fo.fan"; // Thai (U+0E1F)
	case 0xdc0: return "thai.character.pho.samphao"; // Thai (U+0E20)
	case 0xdc1: return "thai.character.mo.ma"; // Thai (U+0E21)
	case 0xdc2: return "thai.character.yo.yak"; // Thai (U+0E22)
	case 0xdc3: return "thai.character.ro.rua"; // Thai (U+0E23)
	case 0xdc4: return "thai.character.ru"; // Thai (U+0E24)
	case 0xdc5: return "thai.character.lo.ling"; // Thai (U+0E25)
	case 0xdc6: return "thai.character.lu"; // Thai (U+0E26)
	case 0xdc7: return "thai.character.wo.waen"; // Thai (U+0E27)
	case 0xdc8: return "thai.character.so.sala"; // Thai (U+0E28)
	case 0xdc9: return "thai.character.so.rusi"; // Thai (U+0E29)
	case 0xdca: return "thai.character.so.sua"; // Thai (U+0E2A)
	case 0xdcb: return "thai.character.ho.hip"; // Thai (U+0E2B)
	case 0xdcc: return "thai.character.lo.chula"; // Thai (U+0E2C)
	case 0xdcd: return "thai.character.o.ang"; // Thai (U+0E2D)
	case 0xdce: return "thai.character.ho.nokhuk"; // Thai (U+0E2E)
	case 0xdcf: return "thai.character.paiyannoi"; // Thai (U+0E2F)
	case 0xdd0: return "thai.character.sara.a"; // Thai (U+0E30)
	case 0xdd1: return "thai.character.mai.han_akat"; // Thai (U+0E31)
	case 0xdd2: return "thai.character.sara.aa"; // Thai (U+0E32)
	case 0xdd3: return "thai.character.sara.am"; // Thai (U+0E33)
	case 0xdd4: return "thai.character.sara.i"; // Thai (U+0E34)
	case 0xdd5: return "thai.character.sara.ii"; // Thai (U+0E35)
	case 0xdd6: return "thai.character.sara.ue"; // Thai (U+0E36)
	case 0xdd7: return "thai.character.sara.uee"; // Thai (U+0E37)
	case 0xdd8: return "thai.character.sara.u"; // Thai (U+0E38)
	case 0xdd9: return "thai.character.sara.uu"; // Thai (U+0E39)
	case 0xdda: return "thai.character.phinthu"; // Thai (U+0E3A)
	case 0xddf: return "thai.currency.symbol.baht"; // Thai (U+0E3F)
	case 0xde0: return "thai.character.sara.e"; // Thai (U+0E40)
	case 0xde1: return "thai.character.sara.ae"; // Thai (U+0E41)
	case 0xde2: return "thai.character.sara.o"; // Thai (U+0E42)
	case 0xde3: return "thai.character.sara.ai.maimuan"; // Thai (U+0E43)
	case 0xde4: return "thai.character.sara.ai.maimalai"; // Thai (U+0E44)
	case 0xde5: return "thai.character.lakkhangyao"; // Thai (U+0E45)
	case 0xde6: return "thai.character.maiyamok"; // Thai (U+0E46)
	case 0xde7: return "thai.character.maitaikhu"; // Thai (U+0E47)
	case 0xde8: return "thai.character.mai.ek"; // Thai (U+0E48)
	case 0xde9: return "thai.character.mai.tho"; // Thai (U+0E49)
	case 0xdea: return "thai.character.mai.tri"; // Thai (U+0E4A)
	case 0xdeb: return "thai.character.mai.chattawa"; // Thai (U+0E4B)
	case 0xdec: return "thai.character.thanthakhat"; // Thai (U+0E4C)
	case 0xded: return "thai.character.nikhahit"; // Thai (U+0E4D)
	case 0xdf0: return "thai.digit.zero"; // Thai (U+0E50)
	case 0xdf1: return "thai.digit.one"; // Thai (U+0E51)
	case 0xdf2: return "thai.digit.two"; // Thai (U+0E52)
	case 0xdf3: return "thai.digit.three"; // Thai (U+0E53)
	case 0xdf4: return "thai.digit.four"; // Thai (U+0E54)
	case 0xdf5: return "thai.digit.five"; // Thai (U+0E55)
	case 0xdf6: return "thai.digit.six"; // Thai (U+0E56)
	case 0xdf7: return "thai.digit.seven"; // Thai (U+0E57)
	case 0xdf8: return "thai.digit.eight"; // Thai (U+0E58)
	case 0xdf9: return "thai.digit.nine"; // Thai (U+0E59)
	case 0xea1: return "hangul.kiyeog"; // Korean
	case 0xea2: return "hangul.ssang.kiyeog"; // Korean
	case 0xea3: return "hangul.kiyeog.sios"; // Korean
	case 0xea4: return "hangul.nieun"; // Korean
	case 0xea5: return "hangul.nieun.jieuj"; // Korean
	case 0xea6: return "hangul.nieun.hieuh"; // Korean
	case 0xea7: return "hangul.dikeud"; // Korean
	case 0xea8: return "hangul.ssang.dikeud"; // Korean
	case 0xea9: return "hangul.rieul"; // Korean
	case 0xeaa: return "hangul.rieul.kiyeog"; // Korean
	case 0xeab: return "hangul.rieul.mieum"; // Korean
	case 0xeac: return "hangul.rieul.pieub"; // Korean
	case 0xead: return "hangul.rieul.sios"; // Korean
	case 0xeae: return "hangul.rieul.tieut"; // Korean
	case 0xeaf: return "hangul.rieul.phieuf"; // Korean
	case 0xeb0: return "hangul.rieul.hieuh"; // Korean
	case 0xeb1: return "hangul.mieum"; // Korean
	case 0xeb2: return "hangul.pieub"; // Korean
	case 0xeb3: return "hangul.ssang.pieub"; // Korean
	case 0xeb4: return "hangul.pieub.sios"; // Korean
	case 0xeb5: return "hangul.sios"; // Korean
	case 0xeb6: return "hangul.ssang.sios"; // Korean
	case 0xeb7: return "hangul.ieung"; // Korean
	case 0xeb8: return "hangul.jieuj"; // Korean
	case 0xeb9: return "hangul.ssang.jieuj"; // Korean
	case 0xeba: return "hangul.cieuc"; // Korean
	case 0xebb: return "hangul.khieuq"; // Korean
	case 0xebc: return "hangul.tieut"; // Korean
	case 0xebd: return "hangul.phieuf"; // Korean
	case 0xebe: return "hangul.hieuh"; // Korean
	case 0xebf: return "hangul.a"; // Korean
	case 0xec0: return "hangul.ae"; // Korean
	case 0xec1: return "hangul.ya"; // Korean
	case 0xec2: return "hangul.yae"; // Korean
	case 0xec3: return "hangul.eo"; // Korean
	case 0xec4: return "hangul.e"; // Korean
	case 0xec5: return "hangul.yeo"; // Korean
	case 0xec6: return "hangul.ye"; // Korean
	case 0xec7: return "hangul.o"; // Korean
	case 0xec8: return "hangul.wa"; // Korean
	case 0xec9: return "hangul.wae"; // Korean
	case 0xeca: return "hangul.oe"; // Korean
	case 0xecb: return "hangul.yo"; // Korean
	case 0xecc: return "hangul.u"; // Korean
	case 0xecd: return "hangul.weo"; // Korean
	case 0xece: return "hangul.we"; // Korean
	case 0xecf: return "hangul.wi"; // Korean
	case 0xed0: return "hangul.yu"; // Korean
	case 0xed1: return "hangul.eu"; // Korean
	case 0xed2: return "hangul.yi"; // Korean
	case 0xed3: return "hangul.i"; // Korean
	case 0xed4: return "hangul.jong.seong.kiyeog"; // Korean
	case 0xed5: return "hangul.jong.seong.ssang.kiyeog"; // Korean
	case 0xed6: return "hangul.jong.seong.kiyeog.sios"; // Korean
	case 0xed7: return "hangul.jong.seong.nieun"; // Korean
	case 0xed8: return "hangul.jong.seong.nieun.jieuj"; // Korean
	case 0xed9: return "hangul.jong.seong.nieun.hieuh"; // Korean
	case 0xeda: return "hangul.jong.seong.dikeud"; // Korean
	case 0xedb: return "hangul.jong.seong.rieul"; // Korean
	case 0xedc: return "hangul.jong.seong.rieul.kiyeog"; // Korean
	case 0xedd: return "hangul.jong.seong.rieul.mieum"; // Korean
	case 0xede: return "hangul.jong.seong.rieul.pieub"; // Korean
	case 0xedf: return "hangul.jong.seong.rieul.sios"; // Korean
	case 0xee0: return "hangul.jong.seong.rieul.tieut"; // Korean
	case 0xee1: return "hangul.jong.seong.rieul.phieuf"; // Korean
	case 0xee2: return "hangul.jong.seong.rieul.hieuh"; // Korean
	case 0xee3: return "hangul.jong.seong.mieum"; // Korean
	case 0xee4: return "hangul.jong.seong.pieub"; // Korean
	case 0xee5: return "hangul.jong.seong.pieub.sios"; // Korean
	case 0xee6: return "hangul.jong.seong.sios"; // Korean
	case 0xee7: return "hangul.jong.seong.ssang.sios"; // Korean
	case 0xee8: return "hangul.jong.seong.ieung"; // Korean
	case 0xee9: return "hangul.jong.seong.jieuj"; // Korean
	case 0xeea: return "hangul.jong.seong.cieuc"; // Korean
	case 0xeeb: return "hangul.jong.seong.khieuq"; // Korean
	case 0xeec: return "hangul.jong.seong.tieut"; // Korean
	case 0xeed: return "hangul.jong.seong.phieuf"; // Korean
	case 0xeee: return "hangul.jong.seong.hieuh"; // Korean
	case 0xeef: return "hangul.rieul.yeorin.hieuh"; // Korean
	case 0xef0: return "hangul.sunkyeongeum.mieum"; // Korean
	case 0xef1: return "hangul.sunkyeongeum.pieub"; // Korean
	case 0xef2: return "hangul.pan.sios"; // Korean
	case 0xef3: return "hangul.kkogji.dalrin.ieung"; // Korean
	case 0xef4: return "hangul.sunkyeongeum.phieuf"; // Korean
	case 0xef5: return "hangul.yeorin.hieuh"; // Korean
	case 0xef6: return "hangul.arae.a"; // Korean
	case 0xef7: return "hangul.arae.ae"; // Korean
	case 0xef8: return "hangul.jong.seong.pan.sios"; // Korean
	case 0xef9: return "hangul.jong.seong.kkogji.dalrin.ieung"; // Korean
	case 0xefa: return "hangul.jong.seong.yeorin.hieuh"; // Korean
	case 0xeff: return "korean.won"; // Korean
	case 0x13bc: return "latin.capital.ligature.oe"; // Latin-9 (U+0152)
	case 0x13bd: return "latin.small.ligature.oe"; // Latin-9 (U+0153)
	case 0x13be: return "latin.capital.letter.y.with.diaeresis"; // Latin-9 (U+0178)
	case 0x20a0: return "currency.ecu.sign"; // Currency
	case 0x20a1: return "currency.colon.sign"; // Currency
	case 0x20a2: return "currency.cruzeiro.sign"; // Currency
	case 0x20a3: return "currency.french.franc.sign"; // Currency
	case 0x20a4: return "currency.lira.sign"; // Currency
	case 0x20a5: return "currency.mill.sign"; // Currency
	case 0x20a6: return "currency.naira.sign"; // Currency
	case 0x20a7: return "currency.peseta.sign"; // Currency
	case 0x20a8: return "currency.rupee.sign"; // Currency
	case 0x20a9: return "currency.won.sign"; // Currency
	case 0x20aa: return "currency.new.sheqel.sign"; // Currency
	case 0x20ab: return "currency.dong.sign"; // Currency
	case 0x20ac: return "currency.euro.sign"; // Currency (U+20AC)

	default: return "void";
	}
}
